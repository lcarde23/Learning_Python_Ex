# 15-2  make a graph and add a colormap to it
from random import choice

class RandomWalk():
    """A class to generate random walks"""

    def __init__(self, num_points=5000):
        """Initialize attributes of a walk."""
        self.num_points = num_points

        #All walks start at (0,0).
        self.x_values = [0]
        self.y_values = [0]

    def fill_walk(self):
        """Calculate all the points in the walk."""

        # Keep taking steos until the walk reaches the desired length.
        while len(self.x_values) < self.num_points:
            # Decide which direction to go and how far to go in that direction.
            x_direction = choice([1, -1])
            x_distance = choice([0, 1, 2, 3, 4, 5, 6, 7, 8])
            x_step = x_direction * x_distance

            y_direction = choice([ 1, -1])
            y_distance = choice([0, 1, 2, 3, 4])
            y_step = y_direction * y_distance

            # Rejects moves that go nowhere
            if x_step == 0 and y_step == 0:
                continue

            # calculate the next x and y values.
            next_x = self.x_values[-1] + x_step
            next_y = self.y_values[-1] + y_step

            self.x_values.append(next_x)
            self.y_values.append(next_y)


# Start of rw_visual.py run this one to make the grpahs appear

import matplotlib.pyplot as plt
from random_walk import RandomWalk

# Make a random walk, and plot the points.
while True:
    rw = RandomWalk(5000)
    rw.fill_walk()

    # Set the size of the plotting window.
    plt.figure(dpi=128, figsize=(10, 6))

    # Plot the points, and show the plot.# Plot the points, and show the plot.
    point_numbers = list(range(rw.num_points))
    plt.plot(rw.x_values, rw.y_values, linewidth=1)
    # Emphasize the first and last points.
    plt.scatter(0, 0, c='green', edgecolors='none', s=68)
    plt.scatter(rw.x_values[-1], rw.y_values[-1], c='red', edgecolors='none', s=86)

    # remove the axes.
    plt.axes().get_xaxis().set_visible(False)
    plt.axes().get_yaxis().set_visible(False)
    plt.show()


    # Example code can definitely be improved on
    keep_running = input("Make another walk? (y/n): ")
    if keep_running == 'n':
        break
